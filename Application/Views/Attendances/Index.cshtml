@model IEnumerable<Data.Entities.Attendance>

@{
    var courses = (IEnumerable<Data.Entities.Course>)ViewData["courses"];
}
<div class="row mb-3">
    <div class="col-md-6">
        <label for="courseDropdown" class="form-label">Select Course:</label>
        <select class="form-select" id="courseDropdown">
            <option value="0">Select a course</option>
            @foreach (var course in courses)
            {
                <option value="@course.Id">@course.Title</option>
            }
        </select>
    </div>
</div>
<div class="row mb-3">
    <div class="col-md-4">
        <label for="userSearch" class="form-label">Search for a user:</label>
        <div class="input-group">
            <input type="text" class="form-control" id="userSearch" placeholder="Last Name">
            <span class="input-group-text"><i class="bi bi-search"></i></span>
        </div>
    </div>
    <div class="col-md-4">
        <label for="cycleDropdown" class="form-label">Select Cycle:</label>
        <div class="input-group flex-grow-1">
            <select class="form-select" id="cycleDropdown">
                <option value="0">All</option>
            </select>
            <button class="btn ms-3" type="button" id="filterButton">
                <i class="bi bi-funnel"></i>
            </button>
        </div>
    </div>
    <div class="col-md-4 d-flex align-items-end">
        <div id="saveContainer" class="ms-3"></div>
    </div>
</div>


<div class="row">
    <div class="col-12 grid-margin">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table" id="headerTableAttendance">
                        <thead>
                            <tr>
                                <th>Course Member</th>
                                <th>Days Not Met</th>
                            </tr>
                        </thead>
                        <tbody id="attendancesTable">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {

        var courseId = $('#courseDropdown').val();

        const courseDropdown = document.getElementById('courseDropdown');
        const cycleDropdown = document.getElementById('cycleDropdown');
        var cyclesData;
        var currentUserId;

        var cycleId = $(this).data('cycle-id');
        var selectedUsers = [];
        $('input[type="checkbox"]:checked').each(function () {
            var userIdRow = $(this).closest('tr').attr('user-id-row');
            selectedUsers.push(userIdRow);
        });

        $.ajax({
            url: '/Attendances/AddAttendance',
            type: 'POST',
            data: { courseId: courseId, cycleId: cycleId, selectedUsers: selectedUsers },
            traditional: true,
            success: function (result) {
                console.log('Users saved:', result);
                var selectedValue = courseId;
                $('#courseDropdown').val(selectedValue);
                console.log('Userssss ssss:', result);

                console.log('Przed triggerem change');
                $('#courseDropdown').trigger('change');
                console.log('Po triggerze change');

                $('#saveButton').hide();
                $('#cancelButton').hide();

            },
            error: function () {
                alert('Wystąpił błąd podczas zapisu.');
            }
        });

        $('#courseDropdown').change(function () {
            courseId = $(this).val();

            $.ajax({
                url: '/Cycles/GetCyclesForCourse',
                type: 'GET',
                data: { courseId: courseId },
                success: function (cycles) {
                    cyclesData = cycles;

                    var dropdown = $('#cycleDropdown');
                    console.log('Received cycles:', cycles);

                    dropdown.find('option:not(:first)').remove();


                    if (Array.isArray(cycles)) {
                        cycles.forEach((e) => {
                            console.log('Cycle Title:', e.title);

                            var option = $('<option></option>').attr('value', e.id).text(e.title);
                            dropdown.append(option);
                        });
                    }


                    if (Array.isArray(cycles)) {
                        var dropdown = $('#cycleDropdown');

                        var tableHeadRow = $('#headerTableAttendance thead tr');

                        $('#headerTableAttendance th:not(:lt(2))').remove();

                        cycles.forEach((e) => {
                            var cycleHeader = $('<th></th>').text(e.title).attr('data-cycle-id-th', e.id);
                            cycleHeader.attr('data-cycle-start', e.startDate);

                            console.log('Cycle Title:', e.title);

                            tableHeadRow.append(cycleHeader);
                        });
                    }
                    else {
                        console.error('Invalid cycles data format:', cycles);
                        alert('An error occurred while fetching cycles.');
                    }
                },
                error: function () {
                    alert('An error occurred while fetching cycles.');
                }
            });



            $.ajax({
                url: '/Courses/GetCourseUsers',
                type: 'GET',
                data: { courseId: courseId },
                success: function (users) {
                    console.log('users:', users);
                    var tableBody = $('#attendancesTable');

                    tableBody.empty();

                    users.forEach((user) => {
                        const currentUserId = user.id;

                        var tableRow = $('<tr></tr>');

                        console.log('user:', user);
                        tableRow.attr('user-id-row', user.id);

                        var imageCell = $('<td></td>');
                        if (user.photos[0] == null) {
                            var userImage = $('<img>').attr('src', '@Url.Content("~/images/blank-profile.png")').attr('alt', 'User Image');
                        } else {
                            var userImage = $('<img>').attr('src', '@Url.Content("~/images/")' + user.photos[0].path).attr('alt', 'User Image');
                        }
                        var userNameCell = $('<p></p>').text(user.firstName + " " + user.lastName).css({
                            'margin-left': '10px',
                            'display': 'inline-block'
                        });

                        imageCell.append(userImage);
                        imageCell.append(userNameCell);
                        tableRow.append(imageCell);

                        var daysNotMetCell = $('<td></td>').text("-");
                        tableRow.append(daysNotMetCell);


                        var thElements = $('#headerTableAttendance th[data-cycle-id-th]').get();

                        function processCycle(thElements, index = 0) {
                            if (index >= thElements.length) {
                                tableBody.append(tableRow);
                                return;
                            }

                            const cycleId = $(thElements[index]).attr('data-cycle-id-th');
                            console.log('CYCLE ID from th:', cycleId);

                            var attendanceCell = $('<td></td>');
                            attendanceCell.attr('data-cycle-id-colrow', cycleId);

                            console.log('CYCLE ID from th:', cycleId);
                            console.log('USER ID from th:', user.id);
                            console.log('USER ID from th:', user.id);

                            fillCell(user.id, cycleId, courseId, attendanceCell, function () {
                                processCycle(thElements, index + 1);
                            });
                        }

                        function fillCell(userId, cycleId, courseId, cell, callback) {
                            $.ajax({
                                url: '/Attendances/CheckAttendance',
                                type: 'GET',
                                data: { userId: userId, cycleId: cycleId, courseId: courseId },
                                success: function (isPresent) {
                                    console.log('Table userId:', userId);
                                    console.log('Table cycleId:', cycleId);
                                    console.log('Table courseId:', courseId);

                                    var iconClass = isPresent ? "mdi mdi-bookmark-check" : "mdi mdi-bookmark-remove";
                                    var iconColor = isPresent ? "green" : "red";

                                    var icon = $('<i></i>').addClass(iconClass).css('color', iconColor);
                                    cell.empty().append(icon);

                                    tableRow.append(cell);

                                    callback();
                                },
                                error: function () {
                                    alert('An error occurred while fetching attendance.');
                                    callback();
                                }
                            });
                        }

                        processCycle(thElements);
                        tableBody.append(tableRow);
                    });
                },
                error: function () {
                    alert('An error occurred while fetching users.');
                }

            });
        });

        $(document).on('click', '#saveButton', function () {
            var cycleId = $(this).data('cycle-id');
            var selectedUsers = [];
            $('input[type="checkbox"]:checked').each(function () {
                var userIdRow = $(this).closest('tr').attr('user-id-row');
                selectedUsers.push(userIdRow);
            });

            $.ajax({
                url: '/Attendances/AddAttendance',
                type: 'POST',
                data: { courseId: courseId, cycleId: cycleId, selectedUsers: selectedUsers },
                traditional: true,
                success: function (result) {
                    console.log('Users saved:', result);
                    var selectedValue = courseId;
                    $('#courseDropdown').val(selectedValue);
                    console.log('Userssss ssss:', result);

                    console.log('Przed triggerem change');
                    $('#courseDropdown').trigger('change');
                    console.log('Po triggerze change');

                    $('#saveButton').hide();
                    $('#cancelButton').hide();

                },
                error: function () {
                    alert('Wystąpił błąd podczas zapisu.');
                }
            });
        });

        $(document).on('click', '#cancelButton', function () {
            $('#attendancesTable td').removeClass('highlight-column');
            $('input[type="checkbox"]').hide();
            $('#saveButton').hide();
            $('#cancelButton').hide();


        });

        $('#headerTableAttendance').on('click', 'th[data-cycle-id-th]', function () {
            var cycleId = $(this).data('cycle-id-th');
            var tableCells = $('#attendancesTable tr td[data-cycle-id-colrow="' + cycleId + '"]');
            console.log('Cycle id:', cycleId);
            $('#attendancesTable td').removeClass('highlight-column');
            $('input[type="checkbox"]').hide();

            tableCells.each(function () {
                var isChecked = $(this).text() === 'V';
                var checkbox = $('<input>').attr({
                    type: 'checkbox',
                    checked: isChecked
                });
                $(this).append(checkbox);
            });

            tableCells.addClass('highlight-column');

            var saveButton = $('<button>').text('SAVE').attr({
                id: 'saveButton',
                class: 'btn btn-primary'
            });

            saveButton.attr('data-cycle-id', cycleId);

            var cancelButton = $('<button>').text('CANCEL').attr({
                id: 'cancelButton',
                class: 'btn btn-secondary'
            });

            $('#saveContainer').empty().append(saveButton, cancelButton);
        });

        $('#cycleDropdown').change(function () {
            var selectedCycleId = $(this).val();

            if (selectedCycleId === "0") {
                $('#headerTableAttendance th[data-cycle-id-th]').show();
                $('#attendancesTable td[data-cycle-id-colrow]').show();
            } else {
                $('#headerTableAttendance th[data-cycle-id-th]').each(function () {
                    var cycleIdForColumn = $(this).attr('data-cycle-id-th');

                    if (cycleIdForColumn !== selectedCycleId) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                });

                $('#attendancesTable td[data-cycle-id-colrow]').each(function () {
                    var cycleIdForCell = $(this).attr('data-cycle-id-colrow');

                    if (cycleIdForCell !== selectedCycleId) {
                        $(this).hide();
                    } else {
                        $(this).show();
                    }
                });
            }
        });


        $('#userSearch').on('input', function () {
            var searchText = $(this).val().toLowerCase();
            $('#attendancesTable tr').each(function () {
                var userName = $(this).find('td:first-child p').text().toLowerCase();
                if (userName.includes(searchText)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        });

        var sortDirection = 1;

        $('#filterButton').click(function () {
            var rows = $('#attendancesTable tr').get();

            rows.sort(function (a, b) {
                var textA = $(a).find('td:first-child p').text().toUpperCase();
                var textB = $(b).find('td:first-child p').text().toUpperCase();

                if (textA < textB) {
                    return -1 * sortDirection;
                } else if (textA > textB) {
                    return 1 * sortDirection;
                }
                return 0;
            });

            $('#attendancesTable').empty();

            $.each(rows, function (index, row) {
                $('#attendancesTable').append(row);
            });

            sortDirection = -1 * sortDirection;
        });


    });

</script>