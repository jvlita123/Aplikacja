@model IEnumerable<Data.Entities.Message>
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "";
    var userId = 0;
    var users = (IEnumerable<Data.Entities.User>)ViewData["users"];
}

<div class="containerMess">
    <div class="list-container message-list">
        <div class="message-row section-title">
            <h2>Latest Chats</h2>
            @foreach (var item in users)
            {
                <a href="@item.Id" class="message-row">
                    <div class="message-row-content">
                        <div class="header-wrapper">
                            <div class="image-wrapper rounded">
                                @if (item.Photos.Count > 0)
                                {
                                    @*<img src="~/Photos/@item.Photos.FirstOrDefault().Path" height="50" width="50" />*@
                                }
                                <img src="~/images/avatar_1.png" height="50" width="50" />

                            </div>
                            <h2>
                                @item.FirstName
                            </h2>
                        </div>
                        <i class="bi bi-chevron-right">@item.FirstName @item.LastName</i>
                    </div>
                </a>
            }
        </div>
       
    </div>

<div class="list-container message-list wide">
        @if (Model.Count() >0)
        {


            <div class="message-row section-title">
                <h2>Conversation with <span>@Model.FirstOrDefault().User1.FirstName</span></h2>
            </div>

            <div class="chat-wrapper">
                @foreach (var item in Model)
                {
                    @if (Model.FirstOrDefault().User1.Messages.Contains(item))
                    {
                        <div class="message-item right">
                            <div class="message-wrapper">
                                <p class="username">
                                    @Html.DisplayFor(modelItem => item.User1.FirstName)
                                </p>

                                <p class="message-text">
                                    @Html.DisplayFor(modelItem => item.Text)
                                </p>
                            </div>
                            @if (Model.FirstOrDefault().User1.Photos.Count > 0)
                            {
                                <div class="message-user-image">
                                    <img src="~/images/avatar_2.png" height="50" width="50" />
                                    @*<img src="~/Photos/@Model.FirstOrDefault().User2.Photos.FirstOrDefault().Path" height="50" width="50"/>*@
                                </div>
                            }
                            <div class="message-user-image">
                                <img src="~/images/avatar_2.png" height="50" width="50" />
                                @*<img src="~/Photos/@Model.FirstOrDefault().User2.Photos.FirstOrDefault().Path" height="50" width="50"/>*@
                            </div>
                        </div>
                    }

                    @if (!(Model.FirstOrDefault().User1.Messages.Contains(item)))
                    {
                        <div class="message-item left">
                            @if (Model.FirstOrDefault().User1.Photos.Count > 0)
                            {
                                <div class="message-user-image">
                                    <img src="~/images/avatar_3.png" height="50" width="50" />
                                    @*<img src="~/Photos/@Model.FirstOrDefault().User1.Photos.FirstOrDefault().Path" height="50" width="50" />*@
                                </div>
                            }
                            <div class="message-user-image">
                                <img src="~/images/avatar_3.png" height="50" width="50" />
                                @*<img src="~/Photos/@Model.FirstOrDefault().User1.Photos.FirstOrDefault().Path" height="50" width="50" />*@
                            </div>
                            <div class="message-wrapper">
                                <p class="username">
                                    @Html.DisplayFor(modelItem => item.User1.FirstName)
                                </p>
                                <p class="message-text">
                                    @Html.DisplayFor(modelItem => item.Text)
                                </p>
                            </div>
                        </div>
                    }

                }

            </div>

            <div class="textbox-wrapper">
                <form asp-action="SendMessage">
                    <div class="form-group textbox-content">
                        <input type="text" asp-for="@Model.FirstOrDefault().Text" class="form-input chat-textbox-input" placeholder="Type a message..." />
                        <span asp-validation-for="@Model.FirstOrDefault().Text" class="text-danger"></span>

                        <button type="submit" class="button send-button">
                            Send <i class="bi bi-send-fill"></i>
                        </button>
                    </div>
                    <div class="form-group">
                        <input type="hidden" asp-for="@Model.FirstOrDefault().UserId" class="form-control" />
                    </div>
                    <div class="form-group">
                        @if (Model.First().User1.Email == HttpContextAccessor.HttpContext.User.Identity.Name)
                        {
                            <input type="hidden" asp-for="@Model.FirstOrDefault().UserId2" class="form-control" value="@Model.FirstOrDefault().UserId2" />
                        }
                        else
                        {
                            <input type="hidden" asp-for="@Model.FirstOrDefault().UserId2" class="form-control" value="@Model.FirstOrDefault().UserId" />

                    }
            </div>
        </form>
    </div>
    }

</div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    var chatWrapper = document.querySelector('.list-container.message-list.wide .chat-wrapper');
    chatWrapper.scrollTop = chatWrapper.scrollHeight;
</script>